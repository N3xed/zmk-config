
name: Build ZMK Keyboards
on: [push, workflow_dispatch]

jobs:
  matrix:
    runs-on: ubuntu-latest
    name: Fetch Build Keyboards
    outputs:
      build_matrix: ${{ env.build_matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch Build Matrix
        run: |
          echo build_matrix=\{\"include\": $(./build.sh --all --ci | jq -scMj)\} >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
    needs: matrix
    name: Build
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.build_matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: repo

      - name: Prepare Build Environment
        shell: sh -x {0}
        run: |
          mkdir config
          cp repo/${{ matrix.zmk_config }}/west.yml config/west.yml
          echo "base_dir=${GITHUB_WORKSPACE}" >> $GITHUB_ENV
          echo "zephyr_version=${ZEPHYR_VERSION}" >> $GITHUB_ENV
          echo "build_dir=${GITHUB_WORKSPACE}/build" >> $GITHUB_ENV
          echo "display_name=${{ matrix.name }}_${{ matrix.side }}" >> $GITHUB_ENV

      - name: Cache west modules
        uses: actions/cache@v4
        continue-on-error: true
        env:
          cache_name: cache-zephyr-${{ env.zephyr_version }}-modules
        with:
          path: |
            ${{ env.base_dir }}/modules/
            ${{ env.base_dir }}/tools/
            ${{ env.base_dir }}/zephyr/
            ${{ env.base_dir }}/bootloader/
            ${{ env.base_dir }}/zmk/
          key: ${{ runner.os }}-build-${{ env.cache_name }}-${{ hashFiles('**/west.yml', '**/build.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache_name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            
      - name: West Init
        working-directory: ${{ env.base_dir }}
        run: west init -l "${{ env.base_dir }}/config"

      - name: West Update
        working-directory: ${{ env.base_dir }}
        run: west update --fetch-opt=--filter=tree:0

      - name: West Zephyr export
        working-directory: ${{ env.base_dir }}
        run: west zephyr-export

      - name: West Build (${{ env.display_name }})
        working-directory: repo
        shell: sh -x {0}
        run: ./build.sh --side "${{ matrix.side }}" --zmk-dir "${{ env.base_dir }}/zmk/app" --zmk-config "${{ matrix.zmk_config }}" --board "${{ matrix.board }}" --shield "${{ matrix.shield }}" --build-dir "${{ env.build_dir }}" -p

      - name: ${{ env.display_name }} Kconfig file
        run: |
          if [ -f "${{ env.build_dir }}/zephyr/.config" ]
          then
            grep -v -e "^#" -e "^$" "${{ env.build_dir }}/zephyr/.config" | sort
          else
            echo "No Kconfig output"
          fi
        if: ${{ !cancelled() }}

      - name: ${{ env.display_name }} Devicetree file
        run: |
          if [ -f "${{ env.build_dir }}/zephyr/zephyr.dts" ]
          then
            cat "${{ env.build_dir }}/zephyr/zephyr.dts"
          elif [ -f "${{ env.build_dir }}/zephyr/zephyr.dts.pre" ]
          then
            cat -s "${{ env.build_dir }}/zephyr/zephyr.dts.pre"
          else
            echo "No Devicetree output"
          fi
        if: ${{ !cancelled() }}

      - name: Rename artifacts
        shell: sh -x {0}
        run: |
          mkdir "${{ env.build_dir }}/artifacts"
          if [ -f "${{ env.build_dir }}/zephyr/zmk.uf2" ]
          then
            cp "${{ env.build_dir }}/zephyr/zmk.uf2" "${{ env.build_dir }}/artifacts/firmware_${{ env.display_name }}.uf2"
          fi

      - name: Archive (${{ env.display_name }})
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ env.display_name }}
          path: ${{ env.build_dir }}/artifacts
