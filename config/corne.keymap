/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de_swiss.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ae_backslash: ae_backslash {
            compatible = "zmk,behavior-mod-morph";
            label = "AE_BACKSLASH";
            bindings = <&kp DE_A_UMLAUT>, <&kp RA(DE_LT)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        n1_f2: n1_f2 {
            compatible = "zmk,behavior-mod-morph";
            label = "N1_F2";
            bindings = <&kp DE_N1>, <&kp F2>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        n2_f3: n2_f3 {
            compatible = "zmk,behavior-mod-morph";
            label = "N2_F3";
            bindings = <&kp DE_N2>, <&kp F3>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        n3_f4: n3_f4 {
            compatible = "zmk,behavior-mod-morph";
            label = "N3_F4";
            bindings = <&kp DE_N3>, <&kp F3>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        n4_f5: n4_f5 {
            compatible = "zmk,behavior-mod-morph";
            label = "N4_F5";
            bindings = <&kp DE_N4>, <&kp F5>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        n5_f6: n5_f6 {
            compatible = "zmk,behavior-mod-morph";
            label = "N5_F6";
            bindings = <&kp DE_N5>, <&kp F6>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        n6_f7: n6_f7 {
            compatible = "zmk,behavior-mod-morph";
            label = "N6_F7";
            bindings = <&kp DE_N6>, <&kp F7>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        n7_f8: n7_f8 {
            compatible = "zmk,behavior-mod-morph";
            label = "N7_F8";
            bindings = <&kp DE_N7>, <&kp F7>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        n8_f9: n8_f9 {
            compatible = "zmk,behavior-mod-morph";
            label = "N8_F9";
            bindings = <&kp DE_N8>, <&kp F9>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        n9_f10: n9_f10 {
            compatible = "zmk,behavior-mod-morph";
            label = "N9_F10";
            bindings = <&kp DE_N9>, <&kp F10>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        n0_f11: n0_f11 {
            compatible = "zmk,behavior-mod-morph";
            label = "N0_F11";
            bindings = <&kp DE_N0>, <&kp F11>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        bs_f12: bs_f12 {
            compatible = "zmk,behavior-mod-morph";
            label = "BS_F12";
            bindings = <&kp BACKSPACE>, <&kp F12>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q     &kp W  &kp E     &kp R  &kp T        &kp DE_Z  &kp U  &kp I         &kp O       &kp P            &kp BSPC
&kp LCTRL  &kp A     &kp S  &kp D     &kp F  &kp G        &kp H     &kp J  &kp K         &kp L       &kp DE_O_UMLAUT  &ae_backslash
&kp LSHFT  &kp DE_Y  &kp X  &kp C     &kp V  &kp B        &kp N     &kp M  &kp DE_COMMA  &kp DE_DOT  &kp DE_MINUS     &mt RSHIFT ESC
                            &kp LGUI  &mo 2  &kp SPACE    &kp RET   &mo 1  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp F1        &n1_f2  &n2_f3  &n3_f4      &n4_f5      &n5_f6        &n6_f7    &n7_f8    &n8_f9    &n9_f10    &n0_f11  &bs_f12
&kp CAPSLOCK  &trans  &trans  &trans      &trans      &trans        &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans   &kp DELETE
&kp LSHFT     &trans  &trans  &bt BT_PRV  &bt BT_NXT  &bt BT_CLR    &trans    &trans    &trans    &trans     &trans   &trans
                              &kp LGUI    &trans      &kp SPACE     &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp DE_SECTION  &trans       &kp DE_AT             &kp DE_HASH   &kp DE_DOLLAR  &trans            &kp CARET         &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_QUESTION     &kp DE_CARET         &kp BSPC
&caps_word      &kp DE_PLUS  &kp DE_DOUBLE_QUOTES  &kp DE_ASTRK  &kp LS(DE_N4)  &kp DE_PERCENT    &kp DE_SLASH      &kp LS(DE_U_UMLAUT)      &kp LS(DE_UMLAUT)         &kp DE_EQUAL        &kp DE_TILDE         &kp DE_GRAVE
&kp LSHFT       &trans       &trans                &trans        &trans         &trans            &kp DE_C_CEDILLA  &kp LS(DE_A_UMLAUT)      &kp LS(DE_DOLLAR)         &kp DE_EXCLAMATION  &kp DE_SINGLE_QUOTE  &kp RIGHT_SHIFT
                                                   &kp LGUI      &trans         &kp SPACE         &kp RET           &trans                   &kp RALT
            >;
        };
    };
};
